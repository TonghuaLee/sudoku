{"version":3,"sources":["webpack:///webpack/bootstrap 12dda182be20b6f0d313","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/toolkit.js","webpack:///./js/core/sudoku.js","webpack:///./js/core/generator.js","webpack:///./js/core/checker.js","webpack:///./js/ui/popupnumbers.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA,e;;AAEA;AACA;;AAEA,+B;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,GAAE;AACF,+B;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC,E;;;;;;ACvBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAkC,MAAM;AACxC,8CAA6C,UAAU;AACvD,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACjHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,4BAA2B,YAAY;AACvC,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,G;;;;;;AC/FA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,G;;;;;;ACxBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;AC/DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C;AACA;AACA,mCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C;AACA,mCAAkC,cAAc;AAChD;AACA;;AAEA;AACA,mCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C;AACA;AACA,oCAAmC,eAAe;AAClD;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA,G;;;;;;AClGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa,oCAAoC;AACjD;AACA;;AAEA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;;AAEA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA,0BAAyB,KAAK;AAC9B,yBAAwB,IAAI;AAC5B,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12dda182be20b6f0d313","const Grid=require(\"./ui/grid\");\nconst PopupNumbers = require(\"./ui/popupnumbers\");\n\nconst grid=new Grid($(\"#container\"));\ngrid.build();\ngrid.layout(); \n\nconst popupnumbers=new PopupNumbers($(\"#popupBumbers\"));\ngrid.bindPopup(popupnumbers);\n\n$(\"#check\").on(\"click\", e => { \n    if(grid.check()){\n        alert(\"恭喜你取得胜利✌️\");\n    }\n});\n$(\"#reset\").on(\"click\", e => {\n    grid.reset();\n });\n$(\"#clear\").on(\"click\", e => { \n    grid.clear();\n});\n$(\"#rebuild\").on(\"click\",e=>{\n    grid.rebuild();\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","/**\n * 生成九宫格\n */\nconst Toolkit = require(\"../core/toolkit\");\nconst Suduku = require(\"../core/sudoku\");\nconst Checker = require(\"../core/checker\");\nclass Grid {\n    constructor(container) {\n        this._$container = container;\n    }\n    build() {\n        const sudoku = new Suduku();\n        sudoku.make();\n        const matrix = sudoku.puzzleMatrix;\n\n        const rowGroupClasses = [\"row_g_top\", \"row_g_middle\", \"row_g_bottom\"];\n        const colGroupClassed = [\"col_g_left\", \"col_g_center\", \"col_g_right\"];\n\n        const $cells = matrix.map(rowValues => rowValues\n            .map((cellValues, colIndex) => {\n                return $(\"<span>\")\n                    .addClass(colGroupClassed[colIndex % 3])\n                    .addClass(cellValues ? \"fixed\" : \"empty\")\n                    .text(cellValues);\n            }));\n\n        const $divArray = $cells.map(($spanArray, rowIndex) => {\n            return $(\"<div>\")\n                .addClass(\"row\")\n                .addClass(rowGroupClasses[rowIndex % 3])\n                .append($spanArray);\n        });\n\n        this._$container.append($divArray);\n    }\n\n    layout() {\n        const width = $(\"span:first\", this._$container).width();\n        $(\"span\", this._$container)\n            .height(width)\n            .css({\n                \"line-height\": `${width}px`,\n                \"font-size\": width < 32 ? `${width / 2}px` : \"\"\n            });\n    }\n\n    bindPopup(popupNumbers) {\n        this._$container.on(\"click\", \"span\", e => {\n            const $cell = $(e.target);\n            if ($cell.is(\".fixed\")) {\n                return;\n            }\n            popupNumbers.popup($cell);\n        });\n    }\n\n    /**\n     * 检查用户的结果，成功则提示，失败则显示错误的位置\n     */\n    check() {\n        const $rows = this._$container.children();\n        const data = $rows.map((rowIndex, div) => {\n            return $(div).children()\n                .map((cloIndex, span) => parseInt($(span).text()) || 0);\n        }).toArray()\n            .map($data => $data.toArray());\n        const checker = new Checker(data);\n        if (checker.check()) {\n            return true;\n        }\n\n        const marks=checker.matrixMarks;\n        this._$container.children()\n        .each((rowIndex,div)=>{\n            $(div).children().each((colIndex,span)=>{\n                const $span=$(span);\n                if ($span.is(\".fixed\")|| marks[rowIndex][colIndex]) {\n                    $span.removeClass(\"error\");\n                }else{\n                    $(span).addClass(\"error\");\n                }\n            });\n        });\n    }\n\n    /**\n     * 重置到当前迷盘的初始状态\n     */\n    reset() {\n        this._$container.find(\"span:not(.fixed)\")\n        .removeClass(\"error mark1 mark2\")\n        .addClass(\"empty\")\n        .text(0);\n    }\n\n    /**\n     * 清除标记\n     */\n    clear() {\n        this._$container.find(\"span.error\")\n        .removeClass(\"error\");\n    }\n\n    /**\n     * 新建一局\n     */\n    rebuild() {\n        this._$container.empty();\n        this.build();\n        this.layout();\n    }\n}\n\nmodule.exports = Grid;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/grid.js\n// module id = 1\n// module chunks = 0","/**\n * 工具方法集\n */\n\n /**\n  * 矩阵数组工具集\n  */\nconst matrixTooolkit = {\n    makeRow(v = 0) {\n        const arr = new Array(9);\n        arr.fill(v);\n        return arr;\n    },\n\n    makeMatrix(v = 0) {\n        return Array.from({ length: 9 }, () => this.makeRow(v));\n    },\n    /**\n     * Fisher-Yates 洗牌算法\n     */\n    shuffle(arr) {\n        const endIndex = arr.length - 2;\n        for (let i = 0; i <= endIndex; i++) {\n            const j = i + Math.floor(Math.random() * (arr.length - i));\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n        }\n        return arr;\n    },\n\n    /**\n     * 检查指定位置是否可以填写数字 n\n     */\n    checkFillable(matrix,n,rowIndex,colIndex){\n        const row=matrix[rowIndex];\n        const column =this.makeRow().map((v,i)=> matrix[i][colIndex]);\n        const {boxIndex}=boxToolkit.convertToBoxIndex(rowIndex,colIndex);\n        const box=boxToolkit.getBoxCells(matrix,boxIndex);\n        for (let i = 0; i < 9; i++) {\n            if (row[i]===n||column[i]===n||box[i]==n) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\n/**\n * 宫坐标系工具\n */\nconst boxToolkit={\n\n    getBoxCells(matrix,boxIndex){\n        const startRowIndex=Math.floor(boxIndex/3)*3;\n        const startColIndex=boxIndex%3*3;\n        const result=[];\n        for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\n            const rowIndex= startRowIndex+Math.floor(cellIndex/3);\n            const colIndex = startColIndex + cellIndex % 3;\n            result.push(matrix[rowIndex][colIndex]);\n        }\n        return result;\n    },\n\n    convertToBoxIndex(rowIndex,colIndex){\n        return {\n            boxIndex: Math.floor(rowIndex/3)*3+Math.floor(colIndex/3),\n            cellIndex: rowIndex%3*3+colIndex%3\n        };\n    },\n\n    convertFromBoxIndex(boxIndex, cellIndex) {\n        return {\n            rowIndex: Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\n            colIndex: boxIndex % 3 * 3 + cellIndex % 3\n        };\n    }\n\n}\n\n\nmodule.exports = class Toolkit{\n    /**\n     * 矩阵和数组相关的工具\n     */\n    static get matrix(){\n        return matrixTooolkit;\n    }\n\n    /**\n     * 宫坐标系相关的工具\n     */\n    static get box(){\n        return boxToolkit;\n    }\n\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/toolkit.js\n// module id = 2\n// module chunks = 0","/**\n * 生产数独游戏\n */\n\n //1. 生成完成的解决放案：Generator\n //2. 随机去除部分数据：按比例\n\n const Generator=require(\"./generator\");\n\n module.exports =class Sudoku{\n     constructor(){\n         const generator=new Generator();\n         generator.generate();\n         this.solutionMatrix=generator.matrix;\n     }\n\n     make(level=5){\n         //const shouldRid=Math.random()*9<level;\n        //生成迷盘\n        this.puzzleMatrix=this.solutionMatrix.map(row=>{\n            return row.map(cell=>Math.random()*9<level?0:cell);\n        });\n\n     }\n }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/sudoku.js\n// module id = 3\n// module chunks = 0","/**\n * 生成数独解决方案\n */\nconst Toolkit = require(\"./toolkit\");\n\nmodule.exports = class Generator {\n\n    generate() {\n        while (!this.internalGenerate()) {\n            console.log(\"try again!!\");\n        }\n    }\n\n    internalGenerate() {\n        this.matrix = Toolkit.matrix.makeMatrix();\n        this.orders = Toolkit.matrix.makeMatrix()\n            .map(row => row.map((v, i) => i))\n            .map(row => Toolkit.matrix.shuffle(row));\n\n        for (let n = 1; n < 10; n++) {\n            if (!this.fillNumber(n)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    fillNumber(n) {\n        return this.fillRow(n, 0);\n    }\n\n    fillRow(n, rowIndex) {\n        if (rowIndex > 8) {\n            return true;\n        }\n\n        const row = this.matrix[rowIndex];\n        const orders = this.orders[rowIndex];\n        //TODO 随机选择列\n        for (let index = 0; index < 9; index++) {\n            const colIndex = orders[index];\n            //如果这个位置已经有值，跳过\n            if (row[colIndex]) {\n                continue;\n            }\n\n            //检查这个位置是否可以填n\n            if (!Toolkit.matrix.checkFillable(this.matrix, n, rowIndex, colIndex)) {\n                continue;\n            }\n\n            row[colIndex] = n;\n            //当前行填写n成功，递归调用 fillRow（）来在下一行中填写n,如果没有填进去，就继续寻找当前行的在一个位置\n            if (!this.fillRow(n, rowIndex + 1)) {\n                row[colIndex] = 0;\n                continue;\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/generator.js\n// module id = 4\n// module chunks = 0","/**\n * 检查数独解决方案\n */\n\nfunction checkArray(array) {\n    const length = array.length;\n    const marks = new Array(length);\n    marks.fill(true);\n    for (let i = 0; i < length; i++) {\n        if (!marks[i]) {\n            continue;\n        }\n        const v = array[i];\n        //是否有效，0=无效，1-9有效\n        if (!v) {\n            marks[i] = false;\n            continue;\n        }\n        //是否有重复，i+1～9，是否与i位置重复\n        for (let j = i + 1; j < length; j++) {\n            if (v === array[j]) {\n                marks[i] = marks[j] = false;\n            }\n        }\n    }\n    return marks;\n}\n\nconst Toolkit = require(\"./toolkit\");\n/**\n * 输入：matrix 用户完成的数独数据 9*9\n * 处理：对matrix行、列、宫进行检查，并填写marks\n * 输出：检查结果 marks\n */\nmodule.exports = class Checker {\n    constructor(matrix) {\n        this._matrix = matrix;\n        this._matrixMarks = Toolkit.matrix.makeMatrix(true);\n    }\n\n    get matrixMarks() {\n        return this._matrixMarks;\n    }\n\n    get isSuccess() {\n        return this._success;\n    }\n\n    check() {\n        this.checkRows();\n        this.checkCols();\n        this.checkBoxes();\n\n        //检查是否成功\n        this._success = this._matrixMarks.every(row => row.every(mark => mark));\n        return this._success;\n    }\n\n    checkRows() {\n        for (let rowIndex = 0; rowIndex < 9; rowIndex++) {\n            const row = this._matrix[rowIndex];\n            const marks = checkArray(row);\n            for (let colIndex = 0; colIndex < marks.length; colIndex++) {\n                if (!marks[colIndex]) {\n                    this._matrixMarks[rowIndex][colIndex] = false;\n                }\n            }\n        }\n    }\n\n    checkCols() {\n        for (let colIndex = 0; colIndex < 9; colIndex++) {\n            const cols = [];\n            for (let rowIndex = 0; rowIndex < 9; rowIndex++) {\n                cols[rowIndex] = this._matrix[rowIndex][colIndex];\n            }\n\n            const marks = checkArray(cols);\n            for (let rowIndex = 0; rowIndex < marks.length; rowIndex++) {\n                if (!marks[rowIndex]) {\n                    this._matrixMarks[rowIndex][colIndex] = false;\n                }\n            }\n        }\n    }\n\n    checkBoxes() {\n        for (let boxIndex = 0; boxIndex < 9; boxIndex++) {\n            const boxes = Toolkit.box.getBoxCells(this._matrix, boxIndex);\n            const marks = checkArray(boxes);\n            for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\n                if (!marks[cellIndex]) {\n                    const { rowIndex, colIndex } = Toolkit.box.convertFromBoxIndex(boxIndex, cellIndex);\n                    this._matrixMarks[rowIndex][colIndex] = false;\n                }\n            }\n        }\n    }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/checker.js\n// module id = 5\n// module chunks = 0","/**\n * 处理弹出的操作面板\n * cell --(click)-->popup\n * popup--(click)-->n-->(fill)-->cell\n */\n\nmodule.exports = class PopupNumbers {\n\n    constructor($panel) {\n        this._$panel = $panel.hide().removeClass(\"hidden\");\n\n        this._$panel.on(\"click\", \"span\", e => {\n            const $cell = this._$targetCell;\n            const $span = $(e.target);\n            //mark1，mark2 回填样式\n            if ($span.hasClass(\"mark1\")) {\n                if ($cell.hasClass(\"mark1\")) {\n                    $cell.removeClass(\"mark1\");\n                } else {\n                    $cell.removeClass(\"mark2\")\n                        .addClass(\"mark1\");\n                }\n            } else if ($span.hasClass(\"mark2\")) {\n                if ($cell.hasClass(\"mark2\")) {\n                    $cell.removeClass(\"mark2\");\n                } else {\n                    $cell.removeClass(\"mark1\")\n                        .addClass(\"mark2\");\n                }\n            } else if ($span.hasClass(\"empty\")) {//empty，取消数字填写，取消mark\n                $cell.text(0)\n                    .addClass(\"empty\");\n\n            } else {\n                //1-9,回填数字\n                $cell.removeClass(\"empty\")\n                    .text($span.text());\n            }\n\n            this.hide();\n        });\n    }\n\n    popup($cell) {\n        this._$targetCell=$cell;\n        const { left, top } = $cell.position();\n        this._$panel\n            .css({\n                left: `${left}px`,\n                top: `${top}px`\n            })\n            .show();\n    }\n\n    hide() {\n        this._$panel.hide();\n    }\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/popupnumbers.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}